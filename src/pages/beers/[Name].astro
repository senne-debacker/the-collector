---
import fetchApi from "../../lib/strapi";

import "../../styles/global.css";

import BaseLayout from "./../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const pageSize = 25;
  let page = 1;
  let allBeers = [];

  let fetchMore = true;
  while (fetchMore) {
    const beersPage = await fetchApi<Beer[]>({
      endpoint: `beers?populate=*&pagination[page]=${page}&pagination[pageSize]=${pageSize}`,
      wrappedByKey: "data",
    });

    allBeers = [...allBeers, ...beersPage];

    if (beersPage.length < pageSize) {
      fetchMore = false;
    } else {
      page++;
    }
  }

  return allBeers.map((beer) => ({
    params: { Name: beer.Name },
    props: { ...beer },
  }));
}

type Props = Beer;

const beer = Astro.props;
const pageTitle = beer.Name;
---

<BaseLayout pageTitle={pageTitle}>
  <div class="layout">
    <div class="content">
        <h1 class="item-title">{beer.Name}</h1>

        <div class="item-logo">
          {
            beer.Logo != null ? (
              <img
                src={`${import.meta.env.STRAPI_URL}${beer.Logo.url}`}
                alt={`${beer.Name} logo`} width="100px"
              />
            ) : (
              <span>Logo not available</span>
            )
          }
        </div>

        <div class="item-meta">
          <p><strong>ABV:</strong> {beer.ABV}%</p>
          <p><strong>Style:</strong> {beer.Style}</p>
          <p><strong>My Score:</strong> {beer.My_score}</p>
          <p><strong>Average Score:</strong> {beer.Average_score}</p>
          <p><strong>Date Tasted:</strong> {beer.Date_tasted}</p>
        </div>

        <div class="item-links">
          <h3>Produced by:</h3>
          {
            beer.Brewery ? (
              <a href={`/breweries/${beer.Brewery.Name}/`} class="item-link">
                {beer.Brewery.Name}
              </a>
            ) : (
              <span>Brewery not available</span>
            )
          }
        </div>
    </div>
  </div>
</BaseLayout>

<style>
  .layout {
    display: flex;
    justify-content: center;
  }

  .content {
    background-color: var(--card-background-color);
    padding: 2rem;
    width: 24%;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
  }
</style>
