---
import fetchApi from "../lib/strapi";
import type Brewery from "../interfaces/breweries";

const fetchAllBreweriesWithBeers = async () => {
    const pageSize = 25;
    let page = 1;
    let allBreweries = [];

    let fetchMore = true;
    while (fetchMore) {
        const breweriesPage = await fetchApi<Brewery[]>({
            endpoint: `breweries?populate=*&pagination[page]=${page}&pagination[pageSize]=${pageSize}`,
            wrappedByKey: "data",
        });

        allBreweries = [...allBreweries, ...breweriesPage];

        if (breweriesPage.length < pageSize) {
            fetchMore = false;
        } else {
            page++;
        }
    }

    return allBreweries;
};

const breweries = await fetchAllBreweriesWithBeers();
console.log(breweries);
---

<!doctype html>
<html lang="en">
    <head>
        <title>Breweries - The Collector</title>
    </head>
    <body>
        <main>
            <h1>Explore Breweries</h1>
            <ul>
                {
                    breweries.map((brewery) => (
                        <li key={brewery.id}>
                            <ul>
                                <li>
                                    <a href={`/brewery/${brewery.id}/`}>
                                        <h2>{brewery.Name}</h2>
                                    </a>
                                </li>
                                <li>{brewery.Location}</li>
                                <li>
                                    {brewery.Description != null ? (
                                        brewery.Description
                                    ) : (
                                        <span>Description not available</span>
                                    )}
                                </li>
                                <li>
                                    {brewery.Logo != null ? (
                                        <img
                                            src={`${import.meta.env.STRAPI_URL}${brewery.Logo.url}`}
                                            alt={`${brewery.Name} logo`}
                                        />
                                    ) : (
                                        <span>Logo not available {console.log(brewery.Logo)}</span>
                                    )}
                                </li>
                                <li>
                                    <h3>Beers Produced</h3>
                                    <ul>
                                        {brewery.Beers?.length > 0 ? (
                                            brewery.Beers.map((beer) => (
                                                <li key={beer.id}>
                                                    <a
                                                        href={`/beer/${beer.id}/`}
                                                    >
                                                        {beer.Name}
                                                    </a>
                                                </li>
                                            ))
                                        ) : (
                                            <li>No beers available</li>
                                        )}
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    ))
                }
            </ul>
        </main>
    </body>
</html>