---
import fetchApi from "../lib/strapi";

import "../styles/global.css";

import Header from "./../components/Header.astro";

const fetchAllBreweriesWithBeers = async () => {
    const pageSize = 25;
    let page = 1;
    let allBreweries = [];

    let fetchMore = true;
    while (fetchMore) {
        const breweriesPage = await fetchApi<Brewery[]>({
            endpoint: `breweries?populate=*&pagination[page]=${page}&pagination[pageSize]=${pageSize}`,
            wrappedByKey: "data",
        });

        allBreweries = [...allBreweries, ...breweriesPage];

        if (breweriesPage.length < pageSize) {
            fetchMore = false;
        } else {
            page++;
        }
    }

    return allBreweries;
};

const breweries = await fetchAllBreweriesWithBeers();
const uniqueLocations = [
    ...new Set(breweries.map((brewery) => brewery.Location)),
];
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>MyBeers - Breweries</title>
        <script src="./../scripts/breweriesFilter.js" defer></script>
        <link rel="stylesheet" href="/styles/global.css" />
    </head>
    <body>
        <Header />
        <main>
            <section class="filter-section">
                <label for="sortOrder">Sort by Name:</label>
                <select id="sortOrder">
                    <option value="az">A-Z</option>
                    <option value="za">Z-A</option>
                </select>

                <label for="locationFilter">Filter by Location:</label>
                <select id="locationFilter">
                    <option value="">All Locations</option>
                    {
                        uniqueLocations.map((location) => (
                            <option key={location} value={location}>
                                {location}
                            </option>
                        ))
                    }
                </select>
            </section>

            <section id="breweriesList" class="breweries-list">
                {
                    breweries.map((brewery) => (
                        <div
                            class="brewery-card"
                            data-location={brewery.Location}
                            data-name={brewery.Name}
                            key={brewery.id}
                        >
                            <a href={`/breweries/${brewery.Name}/`} class="brewery-link">
                                <h2 class="brewery-name">{brewery.Name}</h2>
                            </a>
                            <p class="brewery-location">{brewery.Location}</p>
                            <div class="brewery-logo">
                                {brewery.Logo ? (
                                    <img
                                        src={`${import.meta.env.STRAPI_URL}${brewery.Logo.url}`}
                                        alt={`${brewery.Name} logo`}
                                    />
                                ) : (
                                    <span>Logo not available</span>
                                )}
                            </div>
                        </div>
                    ))
                }
            </section>
        </main>
    </body>
</html>

<script src="/src/scripts/breweriesFilter">

</script>


<style>
body {
    font-family: 'Arial', sans-serif;
    background-color: #f9f9f9;
    margin: 0;
    padding: 0;
    color: #333;
}

header {
    background-color: #fec000;
    padding: 1rem 0;
}

/* Filter Section */
.filter-section {
    text-align: center;
    margin: 2rem 0;
}

.filter-section label {
    margin-right: 0.5rem;
    font-weight: bold;
}

.filter-section select {
    padding: 0.5rem;
    margin: 0.5rem;
    border-radius: 4px;
    border: 1px solid #ccc;
}

/* Breweries List */
.breweries-list {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 2rem;
    justify-items: center;
    list-style: none;
    align-items: center; /* Center the cards */
}

/* Brewery Card */
.brewery-card {
    background-color: #fff;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    width: 90%; /* Less wide, but responsive */
    max-width: 500px; /* Set a max width for the cards */
    margin: 0 auto; /* Center the card horizontally */
}

.brewery-card:hover {
    transform: translateY(-10px);
}

.brewery-link {
    text-decoration: none;
    color: #333;
}

.brewery-name {
    font-size: 1.8rem;
    color: #333;
    margin: 0;
}

.brewery-location {
    font-size: 1rem;
    color: #666;
    margin-top: 0.5rem;
}

.brewery-logo {
    margin-top: 1.5rem;
}

.brewery-logo img {
    max-width: 120px;
    height: auto;
    display: block;
    margin: 0 auto;
}

/* Media Queries for Responsive Design */
@media (max-width: 768px) {
    .filter-section select {
        width: 100%;
        margin: 0.5rem 0;
    }

    .brewery-card {
        padding: 1.5rem;
        width: 95%; /* Make it slightly wider on smaller screens */
    }
}
</style>
