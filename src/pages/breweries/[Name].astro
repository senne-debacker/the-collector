---
import fetchApi from "../../lib/strapi";
import type Beer from "../../interfaces/breweries";

export async function getStaticPaths() {
    const pageSize = 25;
    let page = 1;
    let allBreweries = [];

    let fetchMore = true;
    while (fetchMore) {
        const breweriesPage = await fetchApi<Brewery[]>({
            endpoint: `breweries?populate=*&pagination[page]=${page}&pagination[pageSize]=${pageSize}`,
            wrappedByKey: "data",
        });

        allBreweries = [...allBreweries, ...breweriesPage];

        if (breweriesPage.length < pageSize) {
            fetchMore = false;
        } else {
            page++;
        }
    }

    return allBreweries.map((brewery) => ({
        params: { Name: brewery.Name },
        props: { ...brewery },
    }));
}

type Props = Brewery;

const brewery = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <title>{brewery.Name}</title>
        <meta charset="UTF-8">
    </head>

    <body>
        <main>
            <ul>
                <li key={brewery.id}>
                    <a href={`/breweries/${brewery.Name}/`}>
                        <h2>{brewery.Name}</h2>
                    </a>
                </li>
                <li>{brewery.Location}</li>
                <li>
                    {
                        brewery.Description != null ? (
                            brewery.Description
                        ) : (
                            <span>Description not available</span>
                        )
                    }
                </li>
                <li>
                    {
                        brewery.Logo != null ? (
                            <img
                                src={`${import.meta.env.STRAPI_URL}${brewery.Logo.url}`}
                                alt={`${brewery.Name} logo`}
                            />
                        ) : (
                            <span>
                                Logo not available
                            </span>
                        )
                    }
                </li>
                <li>
                    <h3>Beers Produced</h3>
                    <ul>
                        {
                            brewery.Beers?.length > 0 ? (
                                brewery.Beers.map((beer) => (
                                    <li key={beer.id}>
                                        <a href={`/beers/${beer.Name}/`}>
                                            {beer.Name}
                                        </a>
                                    </li>
                                ))
                            ) : (
                                <li>No beers available</li>
                            )
                        }
                    </ul>
                </li>
            </ul>
        </main>
    </body>
</html>
