---
import fetchApi from "../lib/strapi";

import "../styles/global.css";
import "../styles/beersstyles.css";

import Header from "./../components/Header.astro";

const fetchAllBeers = async () => {
  const pageSize = 25;
  let page = 1;
  let allBeers = [];

  let fetchMore = true;
  while (fetchMore) {
    const beersPage = await fetchApi<Beer[]>({
      endpoint: `beers?populate=*&pagination[page]=${page}&pagination[pageSize]=${pageSize}`,
      wrappedByKey: "data",
    });

    allBeers = [...allBeers, ...beersPage];

    if (beersPage.length < pageSize) {
      fetchMore = false;
    } else {
      page++;
    }
  }

  return allBeers;
};

const beers = await fetchAllBeers();
const uniqueBreweries = [...new Set(beers.map((beer) => beer.Brewery?.Name).filter(Boolean))];
const uniqueStyles = [...new Set(beers.map((beer) => beer.Style).filter(Boolean))];
const minScore = Math.min(...beers.map((beer) => beer.Average_score));
const maxScore = Math.max(...beers.map((beer) => beer.Average_score));
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MyBeers - Beers</title>
    <script src="/src/scripts/beersFilter.js">
    </script>
  </head>
  <body>
    <Header />
    <main>
      <div class="filter-sort">
        <label for="brewery-filter">Filter by Brewery:</label>
        <input id="brewery-filter" type="text" placeholder="Enter brewery name" />

        <label for="style-filter">Filter by Style:</label>
        <input id="style-filter" type="text" placeholder="Enter beer style" />

        <label for="min-score-filter">Min Score:</label>
        <input id="min-score-filter" type="number" min="${minScore}" max="${maxScore}" step="0.1" />

        <label for="max-score-filter">Max Score:</label>
        <input id="max-score-filter" type="number" min="${minScore}" max="${maxScore}" step="0.1" />

        <label for="sort-select">Sort By:</label>
        <select id="sort-select" name="sort">
          <option value="name">Name (A-Z)</option>
          <option value="name_">Name (Z-A)</option>
          <option value="brewery">Brewery (A-Z)</option>
          <option value="brewery_">Brewery (Z-A)</option>
          <option value="score">Score (Ascending)</option>
          <option value="score_">Score (Descending)</option>
        </select>
      </div>

      <div id="beer-list" class="beer-list">
        <ul>
          {
            beers.map((beer) => (
              <li
                class="beer-card"
                data-name={beer.Name}
                data-brewery={beer.Brewery?.Name}
                data-style={beer.Style}
                data-score={beer.Average_score}
              >
                <a href={`/beers/${beer.Name}/`} class="beer-link">
                  <h2 class="beer-name">{beer.Name}</h2>
                </a>
                <div class="beer-brewery">
                  {beer.Brewery ? (
                    <a href={`/breweries/${beer.Brewery.Name}/`} class="brewery-link">
                      {beer.Brewery.Name}
                    </a>
                  ) : (
                    <span>Brewery not available</span>
                  )}
                </div>
                <div class="beer-logo">
                  {beer.Logo != null ? (
                    <img src={`${import.meta.env.STRAPI_URL}${beer.Logo.url}`} alt={`${beer.Name} logo`} />
                  ) : (
                    <span>Logo not available</span>
                  )}
                </div>
                <p class="beer-style">
                  <strong>Style:</strong> {beer.Style}
                </p>
                <p class="beer-score">
                  <strong>Average Score:</strong> {beer.Average_score}
                </p>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
  </body>
</html>